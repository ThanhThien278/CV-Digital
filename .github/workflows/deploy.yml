name: Deploy Next.js to GitHub Pages

on:
  push:
    branches: [ main ] # Kích hoạt workflow khi có push lên nhánh 'main'
  # pull_request: # Có thể bỏ comment nếu bạn muốn chạy workflow trên pull requests
  #   branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest # Sử dụng môi trường Ubuntu mới nhất

    steps:
    - name: Checkout # Bước 1: Clone repository
      uses: actions/checkout@v4 # Sử dụng phiên bản v4 của action checkout

    - name: Setup Node.js # Bước 2: Thiết lập môi trường Node.js
      uses: actions/setup-node@v4 # Sử dụng phiên bản v4 của action setup-node
      with:
        node-version: '18' # Đặt phiên bản Node.js bạn muốn (phù hợp với dự án của bạn)
        cache: 'npm' # Kích hoạt cache cho npm để tăng tốc độ cài đặt

    - name: Install dependencies # Bước 3: Cài đặt các gói phụ thuộc
      run: npm install --legacy-peer-deps # Sử dụng --legacy-peer-deps để tránh lỗi xung đột phụ thuộc

    - name: Build Next.js project # Bước 4: Xây dựng dự án Next.js
      # Với cấu hình "output: 'export'" trong next.config.mjs,
      # lệnh "npm run build" sẽ tự động tạo các file tĩnh vào thư mục "out/"
      run: npm run build 

    - name: Add .nojekyll file # Bước 5: Thêm file .nojekyll (quan trọng cho GitHub Pages)
      # File này báo cho GitHub Pages không xử lý trang web bằng Jekyll,
      # đảm bảo các thư mục bắt đầu bằng dấu gạch dưới không bị bỏ qua.
      run: touch ./out/.nojekyll 

    - name: Deploy to GitHub Pages # Bước 6: Triển khai lên GitHub Pages
      uses: peaceiris/actions-gh-pages@v3 # Sử dụng action của peaceiris để triển khai
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }} # Sử dụng GitHub Token được cung cấp tự động
        publish_dir: ./out # Chỉ định thư mục chứa các file tĩnh đã build để triển khai
        # publish_branch: gh-pages # Mặc định là gh-pages, có thể thay đổi nếu bạn muốn nhánh khác